---
services:
  processor_api:
    build:
      context: ./document-processor
      dockerfile: doc_processor.customdockerfile
    container_name: processor_api
    ports:
      - "8002:8002"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8002/.well-known/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - weaviate_net

  embedding_api:
    build:
      context: ./embeddings
      dockerfile: embeddings.customdockerfile
    container_name: embedding_api
    ports:
      - "8001:8001"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/.well-known/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - weaviate_net

  weaviate:
    command:
    - --host
    - 0.0.0.0
    - --port
    - '8080'
    - --scheme
    - http
    image: cr.weaviate.io/semitechnologies/weaviate:1.30.0
    ports:
    - 8080:8080
    - 50051:50051
    volumes:
    - weaviate_data:/var/lib/weaviate
    restart: on-failure:0
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      # Configure the custom vectorizer's endpoint
      ENABLE_MODULES: 'text2vec-transformers'
      TRANSFORMERS_INFERENCE_API: 'http://embedding_api:8001' 
      DEFAULT_VECTORIZER_MODULE: 'text2vec-transformers'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      CLUSTER_HOSTNAME: 'node1'
    networks:
      - weaviate_net
    depends_on:
      processor_api:
        condition: service_healthy
      embedding_api:
        condition: service_healthy
      wveye:
        condition: service_started

  wveye:
    build:
      context: ./wvsee
      dockerfile: wvsee.customdockerfile
      args:
        - WEAVIATE_URL=http://localhost:8080
    # Map a free external port 3200 to the container's internal 3000 port
    ports:
      - "3200:3000"
    environment:
      - NODE_ENV=production
      - WEAVIATE_URL=http://localhost:8080
      - PORT=3000
    command: ["node", "server.js"]
    networks:
      - weaviate_net # name of the docker network where weaviate docker lives
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    
volumes:
  weaviate_data:

networks:
  weaviate_net:
    driver: bridge